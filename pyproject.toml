[build-system]
requires = ["hatchling>=1.25.0"]
build-backend = "hatchling.build"

[project]
name = "devhub"
version = "0.1.0"
description = "CLI tool to bundle Jira tickets, GitHub PRs, diffs, and comments for code review"
readme = "README.md"
license = { text = "MIT" }
requires-python = ">=3.13"
authors = [
    { name = "hakimjonas", email = "your.email@example.com" },
]
keywords = ["cli", "jira", "github", "code-review", "development"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development", # Fixed: removed :: Tools
    "Topic :: Utilities",
]
dependencies = [
    "attrs>=24.2.0",
    "cattrs>=24.1.2",
    "returns>=0.23.0",
    "typing-extensions>=4.12.2",
    "result>=0.17.0", # For Result types
    "toolz>=0.12.1", # For FP utilities
    "immutables>=0.20", # Immutable collections
    "aiohttp>=3.9.0", # HTTP client with connection pooling
    "aiofiles>=24.1.0", # Async file operations
    "cryptography>=45.0.6",
    "keyring>=25.6.0",
    "argon2-cffi>=25.1.0",
    "prometheus-client>=0.22.1",
    "psutil>=6.1.1",
    "click>=8.0.0", # CLI framework
    "pyyaml>=6.0", # YAML config files
    "types-pyyaml>=6.0.12.20250915",
    "types-psutil>=5.9.5.20250327",
    "types-aiofiles>=23.2.0.20241106",
    "types-setuptools>=75.8.0.20250918",
]

[project.scripts]
devhub = "devhub.cli:main"

[project.urls]
Homepage = "https://github.com/hakimjonas/devhub"
Repository = "https://github.com/hakimjonas/devhub"
Issues = "https://github.com/hakimjonas/devhub/issues"

[tool.hatch.build.targets.wheel]
packages = ["src/devhub"]

[tool.uv]
dev-dependencies = [
    "pytest>=8.4.1",
    "pytest-cov>=6.0.0",
    "pytest-xdist>=3.8.0",
    "pytest-mock>=3.14.0",
    "pytest-asyncio>=0.24.0",
    "ruff>=0.7.3",
    "mypy>=1.17.1",
    "pyright>=1.1.404", # Add back for maximum type safety
    "bandit[toml]>=1.8.6",
    "semgrep>=1.79.0",
    "safety>=3.6.0",
    "pre-commit>=4.3.0",
    "commitizen>=4.8.3",
    "hypothesis>=6.138.7",
    "freezegun>=1.5.1",
    "typos>=1.35.5",
    "vulture>=2.14", # Dead code detection
    "refurb>=2.1.0", # Modernization suggestions
]

[tool.uv.workspace]
members = ["."]

[tool.ruff]
target-version = "py313"
line-length = 120
fix = true
show-fixes = true

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "S101", "S603", "S607", # Allow assert and subprocess
    "D100", "D104", # Missing docstrings
    "COM812", "ISC001", # Formatter conflicts
    "D203", "D213", # Docstring formatting conflicts
    "FBT001", "FBT002", # Boolean traps (actually useful for FP)
    "PLR0913", # Too many arguments (consider for FP)
    "TC001", "TC002", "TC003", # TYPE_CHECKING imports (updated rule names)
    "E501", # Line length (handled by formatter)
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = [
    "S101", "PLR2004", "ANN001", "ANN201", "SLF001", "ARG001", "S105", "S106", "E402", "PTH108", "PLC0415", "PLR0915",
    "D101", "D102", "D103", # Donâ€™t require docstrings in tests
    "S108", # Allow explicit /tmp paths in tests
    "C408", # Allow tuple() in tests
]
"**/__init__.py" = ["F401", "D104"]
"src/devhub/main.py" = ["EXE001", "S310", "G004", "PLR0911"]
"src/devhub/config.py" = ["PLR2004", "PLR0911", "BLE001"]
"src/devhub/vault.py" = ["S105"]  # False positives for enum values
"src/devhub/cli.py" = ["C901", "PLR0912", "PLR0915"]  # CLI wizard complexity acceptable

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.pylint]
max-args = 5        # Encourage small functions
max-branches = 8    # Encourage simple control flow
max-returns = 4     # Multiple returns are fine in FP
max-statements = 30 # Keep functions small

[tool.ruff.lint.mccabe]
max-complexity = 8  # Lower complexity for FP

[tool.ruff.lint.isort]
known-first-party = ["devhub"]
force-single-line = true
lines-after-imports = 2

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
docstring-code-format = true
skip-magic-trailing-comma = false

[tool.mypy]
python_version = "3.13"
strict = true
warn_return_any = true
warn_unused_configs = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
warn_incomplete_stub = true
disallow_any_unimported = true
disallow_any_expr = false
disallow_any_decorated = true
disallow_any_explicit = false
disallow_any_generics = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
strict_optional = true
strict_equality = true
strict_concatenate = true
check_untyped_defs = true
implicit_reexport = false
local_partial_types = true
no_implicit_reexport = true
show_error_codes = true
show_column_numbers = true
pretty = true
color_output = true
error_summary = true
files = ["src/devhub", "tests"]

[[tool.mypy.overrides]]
module = "tests.*"
disallow_any_decorated = false
disallow_untyped_defs = false
disallow_incomplete_defs = false
disallow_untyped_decorators = false

[tool.pyright]
pythonVersion = "3.13"
typeCheckingMode = "strict"
reportMissingImports = true
reportMissingTypeStubs = true
reportImportCycles = true
reportUnusedImport = true
reportUnusedVariable = true
reportOptionalSubscript = true
reportOptionalMemberAccess = true
reportOptionalCall = true
reportUninitializedInstanceVariable = true
reportInvalidTypeVarUse = true
reportUnnecessaryIsInstance = true
reportUnnecessaryCast = true
strictListInference = true
strictDictionaryInference = true
strictSetInference = true
strictParameterNoneValue = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v", "--tb=short", "--strict-markers", "--strict-config",
    "--cov=src/devhub", "--cov-report=term-missing", "--cov-report=html",
    "--cov-fail-under=90", "--hypothesis-show-statistics"
]
markers = [
    "slow: marks tests as slow",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "property: marks property-based tests",
    "asyncio: marks tests as async tests",
]

[tool.commitizen]
name = "cz_conventional_commits"
tag_format = "v$version"
version_scheme = "pep440"
version_provider = "pep621"
update_changelog_on_bump = true
major_version_zero = true

[tool.bandit]
exclude_dirs = ["tests"]
skips = ["B101", "B603", "B607"]

[tool.vulture]
min_confidence = 60
paths = ["src/devhub"]
exclude = ["tests/"]

[tool.coverage.run]
source = ["src/devhub"]
branch = true
omit = ["*/tests/*", "*/__init__.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if TYPE_CHECKING:",
    "raise NotImplementedError",
    "@(abc\\.)?abstractmethod",
]
show_missing = true
precision = 2
fail_under = 90

[tool.typos.default]
extend-ignore-identifiers-re = ["(?i)jira.*"]
